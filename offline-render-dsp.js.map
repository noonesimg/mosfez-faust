{"version":3,"file":"offline-render-dsp.js","sources":["../src/audiobuffer-to-wav/audiobuffer-to-wav.js","../src/convert.ts","../src/run-in-iframe.ts","../src/offline-render.ts","../src/offline-render-dsp.ts"],"sourcesContent":["export function audioBufferToWav(buffer, opt) {\n  opt = opt || {};\n\n  var numChannels = buffer.numberOfChannels;\n  var sampleRate = buffer.sampleRate;\n  var format = opt.float32 ? 3 : 1;\n  var bitDepth = format === 3 ? 32 : 16;\n\n  var result;\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1));\n  } else {\n    result = buffer.getChannelData(0);\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth);\n}\n\nfunction encodeWAV(samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8;\n  var blockAlign = numChannels * bytesPerSample;\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, \"RIFF\");\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true);\n  /* RIFF type */\n  writeString(view, 8, \"WAVE\");\n  /* format chunk identifier */\n  writeString(view, 12, \"fmt \");\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, format, true);\n  /* channel count */\n  view.setUint16(22, numChannels, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true);\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true);\n  /* data chunk identifier */\n  writeString(view, 36, \"data\");\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true);\n  if (format === 1) {\n    // Raw PCM\n    floatTo16BitPCM(view, 44, samples);\n  } else {\n    writeFloat32(view, 44, samples);\n  }\n\n  return buffer;\n}\n\nfunction interleave(inputL, inputR) {\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0;\n  var inputIndex = 0;\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result;\n}\n\nfunction writeFloat32(output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true);\n  }\n}\n\nfunction floatTo16BitPCM(output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\n  }\n}\n\nfunction writeString(view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { audioBufferToWav } from \"./audiobuffer-to-wav/audiobuffer-to-wav\";\n\nexport type AudioArray = number[][];\nexport type Float32AudioArray = Float32Array[];\nexport type AudioData = AudioArray | Float32Array[] | AudioBuffer | ArrayBuffer;\n\n//\n// internal utils\n//\n\nexport type AudioCtxOrSampleRate = AudioContext | OfflineAudioContext | number;\n\nfunction createAudioCtx(\n  audioCtxOrSampleRate: AudioCtxOrSampleRate\n): AudioContext | OfflineAudioContext {\n  if (typeof audioCtxOrSampleRate === \"number\") {\n    return new AudioContext({ sampleRate: audioCtxOrSampleRate });\n  }\n  return audioCtxOrSampleRate;\n}\n\n//\n// type guards\n//\n\nfunction isObjectType(type: string, value: unknown): boolean {\n  return Object.prototype.toString.call(value) === `[object ${type}]`;\n}\n\nexport function isAudioArray(value: unknown): value is AudioArray {\n  return Array.isArray(value) && value.length > 0 && Array.isArray(value[0]);\n}\n\nexport function isFloat32AudioArray(\n  value: unknown\n): value is Float32AudioArray {\n  return (\n    Array.isArray(value) &&\n    value.length > 0 &&\n    isObjectType(\"Float32Array\", value[0])\n  );\n}\n\nexport function isAudioBuffer(value: unknown): value is AudioBuffer {\n  return isObjectType(\"AudioBuffer\", value);\n}\n\nexport function isArrayBuffer(value: unknown): value is ArrayBuffer {\n  return isObjectType(\"ArrayBuffer\", value);\n}\n\n//\n// 1:1 conversion functions\n//\n\nfunction audioArrayToAudioBuffer(\n  channels: Float32AudioArray | AudioArray,\n  audioCtx: AudioContext | OfflineAudioContext\n): AudioBuffer {\n  const buffer = audioCtx.createBuffer(\n    channels.length,\n    channels[0].length,\n    audioCtx.sampleRate\n  );\n  for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n    const nowBuffering = buffer.getChannelData(channel);\n    for (let i = 0; i < buffer.length; i++) {\n      nowBuffering[i] = channels[channel][i];\n    }\n  }\n  return buffer;\n}\n\nfunction audioBufferToFloat32AudioArray(\n  audioBuffer: AudioBuffer\n): Float32AudioArray {\n  const channels: Float32AudioArray = [];\n  for (let i = 0; i < audioBuffer.numberOfChannels; i++) {\n    channels.push(audioBuffer.getChannelData(i));\n  }\n  return channels;\n}\n\nfunction arrayToFloat32AudioArray(arr: AudioArray): Float32AudioArray {\n  return arr.map((arr) => new Float32Array(arr));\n}\n\nfunction float32ArrayToAudioArray(\n  arr: Float32AudioArray | AudioArray\n): AudioArray {\n  return arr.map((arr) => Array.from(arr));\n}\n\nasync function arrayBufferToAudioBuffer(\n  arrayBuffer: ArrayBuffer,\n  audioCtx: AudioContext | OfflineAudioContext\n): Promise<AudioBuffer> {\n  return await new Promise((resolve) =>\n    audioCtx.decodeAudioData(arrayBuffer, resolve)\n  );\n}\n\nfunction arrayBufferToWavBlob(buffer: ArrayBuffer): Blob {\n  return new Blob([new DataView(buffer)], { type: \"audio/wav\" });\n}\n\n//\n// target based conversion functions\n//\n\nexport function toAudioArray(\n  input: AudioArray | Float32AudioArray | AudioBuffer\n): AudioArray {\n  if (isAudioBuffer(input)) {\n    input = audioBufferToFloat32AudioArray(input);\n  }\n  if (isFloat32AudioArray(input)) {\n    return float32ArrayToAudioArray(input);\n  }\n  if (isAudioArray(input)) {\n    return input;\n  }\n  throw new Error(`toArray: unconvertible input type: ${input}`);\n}\n\nexport function toFloat32AudioArray(\n  input: AudioArray | Float32AudioArray | AudioBuffer\n): Float32AudioArray {\n  if (isFloat32AudioArray(input)) {\n    return input;\n  }\n  if (isAudioArray(input)) {\n    return arrayToFloat32AudioArray(input);\n  }\n  if (isAudioBuffer(input)) {\n    return audioBufferToFloat32AudioArray(input);\n  }\n  throw new Error(`toFloat32AudioArray: unconvertible input type: ${input}`);\n}\n\nexport async function toAudioBuffer(\n  input: AudioData,\n  audioCtxOrSampleRate: AudioCtxOrSampleRate\n): Promise<AudioBuffer> {\n  if (isAudioBuffer(input)) {\n    return input;\n  }\n  const audioCtx = createAudioCtx(audioCtxOrSampleRate);\n  if (isArrayBuffer(input)) {\n    return arrayBufferToAudioBuffer(input, audioCtx);\n  }\n  if (isAudioArray(input) || isFloat32AudioArray(input)) {\n    return audioArrayToAudioBuffer(input, audioCtx);\n  }\n  throw new Error(`toAudioBuffer: unconvertible input type: ${input}`);\n}\n\nexport async function toArrayBuffer(\n  input: AudioData,\n  audioCtxOrSampleRate: AudioCtxOrSampleRate\n): Promise<ArrayBuffer> {\n  if (isArrayBuffer(input)) {\n    return input;\n  }\n  const audioCtx = createAudioCtx(audioCtxOrSampleRate);\n  const buffer = await toAudioBuffer(input, audioCtx);\n  return audioBufferToWav(buffer, { float32: true });\n}\n\nexport async function toWavBlob(\n  input: AudioData,\n  audioCtxOrSampleRate: AudioCtxOrSampleRate\n): Promise<Blob> {\n  const buffer = await toArrayBuffer(input, audioCtxOrSampleRate);\n  return arrayBufferToWavBlob(buffer);\n}\n\n//\n// utils\n//\n\nexport async function downloadWav(\n  input: AudioData,\n  audioCtxOrSampleRate: AudioCtxOrSampleRate,\n  name: string\n) {\n  const blob = await toWavBlob(input, audioCtxOrSampleRate);\n  downloadBlob(blob, `${name}.wav`);\n}\n\nexport function downloadBlob(blob: Blob, name: string) {\n  const url = URL.createObjectURL(blob);\n  const anchor = document.createElement(\"a\");\n  document.body.appendChild(anchor);\n  anchor.href = url;\n  anchor.download = name;\n  anchor.click();\n  anchor.remove();\n  URL.revokeObjectURL(url);\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport runInIframeInnerStringified from \"../dist/iframe/run-in-iframe-inner.stringify.js\";\n\nexport type RunInIframeConfig = {\n  functionString: string;\n  params: unknown;\n  transferrables?: Transferable[];\n};\n\nexport type RunInIframeInnerResult = [unknown] | [unknown, Transferable[]];\n\nexport async function runInIframe(\n  options: RunInIframeConfig\n): Promise<unknown> {\n  const { functionString, params, transferrables = [] } = options;\n  const iframe = document.createElement(\"iframe\");\n  iframe.style.display = \"none\";\n  document.body.append(iframe);\n  const { contentWindow } = iframe;\n\n  if (!contentWindow) throw new Error(`contentWindow not available on iframe`);\n\n  contentWindow.document.write(\n    `<script>\n      var exports = {};\n      ${functionString}\n      ${runInIframeInnerStringified}\n      exports.runInIframeInner(exports.run);\n    </script>`\n  );\n\n  return new Promise((resolve) => {\n    const messageListener = (message: MessageEvent) => {\n      if (message.source !== contentWindow) return;\n\n      window.removeEventListener(\"message\", messageListener);\n      iframe.remove();\n      resolve(message.data);\n    };\n    window.addEventListener(\"message\", messageListener);\n\n    contentWindow.postMessage(params, window.location.origin, transferrables);\n  });\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport offlineRenderInnerStringified from \"../dist/iframe/offline-render-inner.stringify.js\";\n\nimport {\n  AudioArray,\n  Float32AudioArray,\n  toArrayBuffer,\n  toAudioBuffer,\n  toFloat32AudioArray,\n} from \"./convert\";\nimport { runInIframe } from \"./run-in-iframe\";\n\nexport type OfflineRenderParams = {\n  functionString?: string;\n  channels: number;\n  sampleRate: number;\n  length?: number;\n  input?: AudioArray | Float32AudioArray | AudioBuffer;\n  props?: Record<string, unknown>;\n};\n\nexport async function offlineRender(\n  params: OfflineRenderParams\n): Promise<Float32AudioArray> {\n  const { functionString = \"\", channels, sampleRate, input, props } = params;\n  let { length } = params;\n\n  let inputArrayBuffer: ArrayBuffer | undefined;\n  let transferrables: ArrayBuffer[] = [];\n\n  if (input) {\n    inputArrayBuffer = await toArrayBuffer(input, sampleRate);\n    transferrables = [inputArrayBuffer];\n    if (length === undefined) {\n      length = toFloat32AudioArray(input)[0]?.length ?? 0;\n    }\n  }\n\n  const result = await runInIframe({\n    functionString: `\n      ${offlineRenderInnerStringified}\n      ${functionString}\n      exports.run = exports.offlineRenderInner(exports.buildContext);\n    `,\n    params: {\n      channels,\n      sampleRate,\n      inputArrayBuffer,\n      length: length ?? 0,\n      props,\n    },\n    transferrables,\n  });\n\n  const audioBuffer = await toAudioBuffer(result as ArrayBuffer, sampleRate);\n  return toFloat32AudioArray(audioBuffer);\n}\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport offlineRenderDspInnerStringified from \"../dist/iframe/offline-render-dsp-inner.stringify.js\";\nimport { offlineRender, OfflineRenderParams } from \"./offline-render\";\n\nexport type OfflineRenderDspParams = Omit<\n  OfflineRenderParams,\n  \"functionString\"\n> & {\n  dsp: string;\n};\n\nexport async function offlineRenderDsp(params: OfflineRenderDspParams) {\n  const { dsp, ...rest } = params;\n  return offlineRender({\n    functionString: `\n      ${offlineRenderDspInnerStringified}\n      exports.buildContext = exports.offlineRenderDspInner;\n    `,\n    props: {\n      dsp,\n    },\n    ...rest,\n  });\n}\n"],"names":[],"mappings":"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"}